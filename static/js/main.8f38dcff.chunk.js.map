{"version":3,"sources":["components/Header.js","components/Visual.js","components/Project.js","components/Skill.js","components/Footer.js","components/About.js","App.js","serviceWorker.js","index.js"],"names":["Header","visual","about","skill","project","executeScroll","ref","window","scrollTo","current","offsetTop","scrollToRef","useState","show","setShow","className","onClick","e","Visual","state","text","isDeleting","loopNum","typingSpeed","handleType","dataText","props","fullText","length","setState","substring","setTimeout","this","heading","id","React","Component","Project","forwardRef","console","log","src","alt","href","Skill","Footer","About","App","useRef","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8f38dcff.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../styles/Header.scss\";\r\n\r\nfunction Header({ visual, about, skill, project }) {\r\n  const scrollToRef = ref => window.scrollTo(0, ref.current.offsetTop - 100);\r\n  const executeScroll = ref => scrollToRef(ref);\r\n  const [show, setShow] = useState(true);\r\n\r\n  return (\r\n    <header className=\"header cfixed\">\r\n      {show && (\r\n        <nav>\r\n          <ul className=\"gnb\">\r\n            <li onClick={e => executeScroll(visual)}>HOME</li>\r\n            <li onClick={e => executeScroll(about)}>AOUT</li>\r\n            <li onClick={e => executeScroll(skill)}>SKILL</li>\r\n            <li onClick={e => executeScroll(project)}>PROJECT</li>\r\n          </ul>\r\n        </nav>\r\n      )}\r\n      <span className=\"menu-toggle-btn\" onClick={() => setShow(!show)}>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n      </span>\r\n    </header>\r\n  );\r\n}\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"../styles/Visual.scss\";\r\n\r\nclass Visual extends React.Component {\r\n  state = {\r\n    text: \"\",\r\n    isDeleting: false,\r\n    loopNum: 0,\r\n    typingSpeed: 200\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.handleType();\r\n  }\r\n\r\n  handleType = () => {\r\n    const { dataText } = this.props;\r\n    const { isDeleting, loopNum, text, typingSpeed } = this.state;\r\n    const i = loopNum % dataText.length;\r\n    const fullText = dataText[i];\r\n\r\n    this.setState({\r\n      text: isDeleting\r\n        ? fullText.substring(0, text.length - 1)\r\n        : fullText.substring(0, text.length + 1),\r\n      typingSpeed: isDeleting ? 30 : 200\r\n    });\r\n\r\n    if (!isDeleting && text === fullText) {\r\n      setTimeout(() => this.setState({ isDeleting: true }), 800);\r\n    } else if (isDeleting && text === \"\") {\r\n      this.setState({\r\n        isDeleting: false,\r\n        loopNum: loopNum + 1\r\n      });\r\n    }\r\n\r\n    setTimeout(this.handleType, typingSpeed);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <section className=\"section-visual\">\r\n        <div className=\"container\">\r\n          <div className=\"visual-text\">\r\n            <h1>{this.props.heading}&nbsp;</h1>\r\n            <span>{this.state.text}</span>\r\n            <span id=\"cursor\" />\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Visual;\r\n","import React, { forwardRef } from \"react\";\r\nimport \"../styles/Project.scss\";\r\n\r\nconst Project = forwardRef((props, ref) => {\r\n  console.log(ref);\r\n  return (\r\n    <section ref={ref} className=\"project-section\">\r\n      <div className=\"container\">\r\n        <h2 className=\"sec-tit\">Project</h2>\r\n        <ul className=\"project-list\">\r\n          <li>\r\n            <img src=\"/images/boxoffice.png\" alt=\"boxoffice\" />\r\n            <div className=\"project-contents\">\r\n              <div className=\"project-title\">\r\n                <strong>01</strong>BOX OFFICE\r\n              </div>\r\n              <div className=\"project-desc\">\r\n                <p>\r\n                  박스오피스를 날짜 별로 확인 할 수 있는 사이트입니다.\r\n                  <br />\r\n                  날짜 검색, 로그인 및 회원가입, 댓글 등이 가능한 SPA 웹페이지\r\n                  입니다.\r\n                </p>\r\n                <div className=\"project-tag\">\r\n                  <span>#ES6/7</span>\r\n                  <span>#React</span>\r\n                  <span>#React-ROUTER</span>\r\n                  <span>#Redux</span>\r\n                  <span>#SCSS</span>\r\n                  <span>#FIREBASE</span>\r\n                </div>\r\n                <div className=\"project-btn\">\r\n                  <span>\r\n                    <a href=\"https://github.com/pgg-dev/boxoffice\">GITHUB</a>\r\n                  </span>\r\n                  <span>\r\n                    <a href=\"http://boxoffice.dothome.co.kr/\">SITE</a>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </section>\r\n  );\r\n});\r\n\r\nexport default Project;\r\n","import React, { forwardRef } from \"react\";\r\nimport \"../styles/Skill.scss\";\r\n\r\nconst Skill = forwardRef((props, ref) => {\r\n  return (\r\n    <section ref={ref} className=\"skill-section\">\r\n      <div className=\"container\">\r\n        <h2 className=\"sec-tit\">SKILL</h2>\r\n        <ul className=\"skill-list\">\r\n          <li>\r\n            <img src=\"./images/logo/javascript.svg\" alt=\"javascript\" />\r\n            <h3>ES6 / 7777</h3>\r\n          </li>\r\n          <li>\r\n            <img src=\"/images/logo/react.svg\" alt=\"react\" />\r\n            <h3>React</h3>\r\n          </li>\r\n          <li>\r\n            <img src=\"/images/logo/redux.svg\" alt=\"redux\" />\r\n            <h3>Redux</h3>\r\n          </li>\r\n          <li>\r\n            <img src=\"/images/logo/html-5.svg\" alt=\"html5\" />\r\n            <h3>HTML5</h3>\r\n          </li>\r\n          <li>\r\n            <img src=\"/images/logo/css-3.svg\" alt=\"css3\" />\r\n            <h3>CSS3</h3>\r\n          </li>\r\n          <li>\r\n            <img src=\"/images/logo/sass.svg\" alt=\"sass\" />\r\n            <h3>SCSS</h3>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </section>\r\n  );\r\n});\r\n\r\nexport default Skill;\r\n","import React from \"react\";\r\nimport \"../styles/Footer.scss\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <div className=\"container\">\r\n        <div className=\"footer-content1\">\r\n          <img src=\"/images/mail.svg\" alt=\"mail\" />\r\n          <span>park.geumgyu@gmail.com</span>\r\n        </div>\r\n        <div className=\"footer-content2\">\r\n          <a href=\"https://github.com/pgg-dev\">\r\n            <img src=\"/images/github.svg\" alt=\"github\" />\r\n          </a>\r\n          <a href=\"https://pgg-dev.tistory.com/\">\r\n            <img src=\"/images/blog.jpg\" alt=\"blog\" />\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React, { forwardRef } from \"react\";\r\nimport \"../styles/About.scss\";\r\n\r\nconst About = forwardRef((props, ref) => {\r\n  return (\r\n    <section ref={ref} className=\"about-section\">\r\n      <div className=\"container\">\r\n        <h2 className=\"sec-tit\">ABOUT ME</h2>\r\n        <p className=\"desc\">\r\n          독학으로 시작해 현재 JavaScript의 매력에 빠져, 프론트엔드 개발자가\r\n          되기 위해 앞으로 나아가고있습니다.\r\n          <br />\r\n          사용자가 경험하는 부분을 책임지고 세상에 유익함과 편의성을 줄 수 있는\r\n          프론드엔드 개발자가 되고싶습니다.\r\n        </p>\r\n      </div>\r\n    </section>\r\n  );\r\n});\r\n\r\nexport default About;\r\n","import React, { useRef } from \"react\";\nimport \"./styles/reset.css\";\nimport Header from \"./components/Header\";\nimport Visual from \"./components/Visual\";\nimport Project from \"./components/Project\";\nimport Skill from \"./components/Skill\";\nimport Footer from \"./components/Footer\";\nimport About from \"./components/About\";\nimport \"./styles/App.scss\";\n\nfunction App() {\n  const visual = useRef();\n  const about = useRef();\n  const skill = useRef();\n  const project = useRef();\n\n  return (\n    <div className=\"App\">\n      <Header\n        visual={visual}\n        about={about}\n        skill={skill}\n        project={project}\n      ></Header>\n      <Visual\n        ref={visual}\n        heading={\" I'm a front-end developer.\"}\n        dataText={[\"안녕하세요 박금규입니다.\", \"포트폴리오 웹 사이트 입니다.\"]}\n      />\n      <About ref={about} />\n      <Skill ref={skill} />\n      <Project ref={project} />\n      <Footer></Footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}